{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2022-05-26T21:13:34.064Z",
    "end": "2022-05-26T21:15:00.550Z",
    "duration": 86486,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b1b1242f-5778-4007-bf0a-f6424c8215ed",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ef6108cb-f16c-4c4e-90b0-461d0a1efaef",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 614,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "09aa4fb9-9e10-4fed-8005-e0ed2cdfb697",
              "parentUUID": "ef6108cb-f16c-4c4e-90b0-461d0a1efaef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "09aa4fb9-9e10-4fed-8005-e0ed2cdfb697"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 614,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2dd47c7a-0610-49da-a103-9849d1f44d94",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 386,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "1a122bd3-fe9f-424e-aa65-1178c2688a6d",
              "parentUUID": "2dd47c7a-0610-49da-a103-9849d1f44d94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 536,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "35dc66d2-17b9-4d6a-adf1-1a5307262239",
              "parentUUID": "2dd47c7a-0610-49da-a103-9849d1f44d94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 323,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "686ebac4-73f2-4107-af9b-4bee7ffa2784",
              "parentUUID": "2dd47c7a-0610-49da-a103-9849d1f44d94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 205,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "6779aea5-5472-4228-8b16-9282f8e37c34",
              "parentUUID": "2dd47c7a-0610-49da-a103-9849d1f44d94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 234,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "48d543ff-6760-461d-ab8d-3d14e0bab6a1",
              "parentUUID": "2dd47c7a-0610-49da-a103-9849d1f44d94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 194,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "943eaf74-7791-41cb-b69a-0e5c503c5e1c",
              "parentUUID": "2dd47c7a-0610-49da-a103-9849d1f44d94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "64d0df6d-0001-46b9-889f-950ee3e1fc36",
              "parentUUID": "2dd47c7a-0610-49da-a103-9849d1f44d94",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1a122bd3-fe9f-424e-aa65-1178c2688a6d",
            "35dc66d2-17b9-4d6a-adf1-1a5307262239",
            "686ebac4-73f2-4107-af9b-4bee7ffa2784",
            "6779aea5-5472-4228-8b16-9282f8e37c34",
            "48d543ff-6760-461d-ab8d-3d14e0bab6a1",
            "943eaf74-7791-41cb-b69a-0e5c503c5e1c",
            "64d0df6d-0001-46b9-889f-950ee3e1fc36"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2070,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0702376f-925b-480e-8837-466926cda7af",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 356,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "279a83aa-dfb5-48f1-ac3e-e6bb99084a9b",
              "parentUUID": "0702376f-925b-480e-8837-466926cda7af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 509,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "07fd2f30-1646-40c4-9394-eb747cb60890",
              "parentUUID": "0702376f-925b-480e-8837-466926cda7af",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "279a83aa-dfb5-48f1-ac3e-e6bb99084a9b",
            "07fd2f30-1646-40c4-9394-eb747cb60890"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 865,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "749f50c1-0890-46b7-affc-635b1eb5e654",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 233,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "84cdebf9-403a-4d35-aeae-2d7e92f9b357",
              "parentUUID": "749f50c1-0890-46b7-affc-635b1eb5e654",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 346,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "0685188f-566d-47e1-aab5-a8fccab39dec",
              "parentUUID": "749f50c1-0890-46b7-affc-635b1eb5e654",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 478,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "f60a62d3-e226-4669-8dc7-397f8e61b5b2",
              "parentUUID": "749f50c1-0890-46b7-affc-635b1eb5e654",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 347,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "72f9b142-fe89-465e-8962-f9b728a184cd",
              "parentUUID": "749f50c1-0890-46b7-affc-635b1eb5e654",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "84cdebf9-403a-4d35-aeae-2d7e92f9b357",
            "0685188f-566d-47e1-aab5-a8fccab39dec",
            "f60a62d3-e226-4669-8dc7-397f8e61b5b2",
            "72f9b142-fe89-465e-8962-f9b728a184cd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1404,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "49806c7b-76a9-4632-b919-3fa68c152352",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 905,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "1f16a44a-9c56-4360-ae3f-f820416d261e",
              "parentUUID": "49806c7b-76a9-4632-b919-3fa68c152352",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 671,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "77e8e05d-74e6-497b-9a1a-8c4fab583e5e",
              "parentUUID": "49806c7b-76a9-4632-b919-3fa68c152352",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1f16a44a-9c56-4360-ae3f-f820416d261e",
            "77e8e05d-74e6-497b-9a1a-8c4fab583e5e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1576,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a4aef16e-6568-4bc4-afe6-586fb96e9284",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 354,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "90ea92a3-e599-4eea-8826-18a42f434d9e",
              "parentUUID": "a4aef16e-6568-4bc4-afe6-586fb96e9284",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 211,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "e0e4de89-865a-4e22-8c58-88bf949e6661",
              "parentUUID": "a4aef16e-6568-4bc4-afe6-586fb96e9284",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "90ea92a3-e599-4eea-8826-18a42f434d9e",
            "e0e4de89-865a-4e22-8c58-88bf949e6661"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 565,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ebd62dd4-a137-4d90-bf6f-7902b08d979c",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 734,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "83cb1325-bbd7-4dbf-842b-5e0f4dcf102f",
              "parentUUID": "ebd62dd4-a137-4d90-bf6f-7902b08d979c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 10922,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "eba0d3cb-9752-4e86-9626-760f69dde3ce",
              "parentUUID": "ebd62dd4-a137-4d90-bf6f-7902b08d979c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "83cb1325-bbd7-4dbf-842b-5e0f4dcf102f",
            "eba0d3cb-9752-4e86-9626-760f69dde3ce"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11656,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d0745d2e-afd7-45c7-8a99-9a0d2b619ec5",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2960,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "fc76a439-2716-49b5-bd91-da9f7748368c",
              "parentUUID": "d0745d2e-afd7-45c7-8a99-9a0d2b619ec5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 10738,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "567bc033-ba32-4be5-9f20-81e72dea3a43",
              "parentUUID": "d0745d2e-afd7-45c7-8a99-9a0d2b619ec5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 3292,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "f70a8354-8568-4318-9b09-84952a0b51ba",
              "parentUUID": "d0745d2e-afd7-45c7-8a99-9a0d2b619ec5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fc76a439-2716-49b5-bd91-da9f7748368c",
            "567bc033-ba32-4be5-9f20-81e72dea3a43",
            "f70a8354-8568-4318-9b09-84952a0b51ba"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16990,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5dc4cf5a-c0af-4032-9be9-77856d9bb75c",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 301,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "e0556b06-fb97-4edf-a7cb-0bf10c0c42cd",
              "parentUUID": "5dc4cf5a-c0af-4032-9be9-77856d9bb75c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 180,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "efbaf301-f937-4be3-9587-8ab50338ce48",
              "parentUUID": "5dc4cf5a-c0af-4032-9be9-77856d9bb75c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 190,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "0383966f-f66f-4a0a-8a9b-1ffd66f903f3",
              "parentUUID": "5dc4cf5a-c0af-4032-9be9-77856d9bb75c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 3080,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "b3ad19a3-23b0-447c-9ff2-2508758397cf",
              "parentUUID": "5dc4cf5a-c0af-4032-9be9-77856d9bb75c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e0556b06-fb97-4edf-a7cb-0bf10c0c42cd",
            "efbaf301-f937-4be3-9587-8ab50338ce48",
            "0383966f-f66f-4a0a-8a9b-1ffd66f903f3",
            "b3ad19a3-23b0-447c-9ff2-2508758397cf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3751,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c1ca6582-87dc-4be2-8039-a17c56f84d72",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4631,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:32811/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32811/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32811/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:32811/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:32811/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:32811/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32811/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32811/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32811/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32811/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32811/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32811/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32811/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7a10dbef-6701-48a8-94c0-6089adf5fff3",
              "parentUUID": "c1ca6582-87dc-4be2-8039-a17c56f84d72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 436,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "43ff48c1-4917-4b4b-b2cc-3d8dfbe237a6",
              "parentUUID": "c1ca6582-87dc-4be2-8039-a17c56f84d72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4438,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:32811/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32811/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32811/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:32811/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:32811/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:32811/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32811/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32811/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32811/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32811/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32811/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32811/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32811/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b23435ed-4fff-42f1-992d-c3527c07c217",
              "parentUUID": "c1ca6582-87dc-4be2-8039-a17c56f84d72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 461,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {},
              "uuid": "eed90115-8e60-4600-92a2-5f6b964126b5",
              "parentUUID": "c1ca6582-87dc-4be2-8039-a17c56f84d72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4433,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:32811/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32811/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32811/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:32811/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:32811/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:32811/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32811/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32811/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32811/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32811/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32811/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32811/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32811/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "11981322-b30e-4748-b17b-712ea459d2dc",
              "parentUUID": "c1ca6582-87dc-4be2-8039-a17c56f84d72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4598,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:32811/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32811/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32811/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:32811/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:32811/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:32811/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32811/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32811/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32811/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32811/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32811/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32811/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32811/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1bada2c9-0ac9-4118-bd10-7ea4cd9ea835",
              "parentUUID": "c1ca6582-87dc-4be2-8039-a17c56f84d72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 777,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "AssertionError: expected false to match /Board inválido!/i",
                "estack": "AssertionError: expected false to match /Board inválido!/i\n    at getRet (http://localhost:32811/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:32811/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:32811/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:32811/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:32811/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:32811/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:32811/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:32811/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32811/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32811/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:32811/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32811/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32811/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32811/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0708731e-00d8-4e1e-936d-b141f560c420",
              "parentUUID": "c1ca6582-87dc-4be2-8039-a17c56f84d72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4455,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:32811/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32811/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32811/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:32811/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:32811/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:32811/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32811/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32811/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32811/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32811/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32811/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32811/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32811/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fb81d152-58e8-4db5-9e0a-de191babf662",
              "parentUUID": "c1ca6582-87dc-4be2-8039-a17c56f84d72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4657,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:32811/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32811/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32811/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:32811/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:32811/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:32811/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32811/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32811/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32811/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32811/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32811/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32811/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32811/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ae850ddc-5993-4a45-80eb-788931585701",
              "parentUUID": "c1ca6582-87dc-4be2-8039-a17c56f84d72",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "43ff48c1-4917-4b4b-b2cc-3d8dfbe237a6",
            "eed90115-8e60-4600-92a2-5f6b964126b5"
          ],
          "failures": [
            "7a10dbef-6701-48a8-94c0-6089adf5fff3",
            "b23435ed-4fff-42f1-992d-c3527c07c217",
            "11981322-b30e-4748-b17b-712ea459d2dc",
            "1bada2c9-0ac9-4118-bd10-7ea4cd9ea835",
            "0708731e-00d8-4e1e-936d-b141f560c420",
            "fb81d152-58e8-4db5-9e0a-de191babf662",
            "ae850ddc-5993-4a45-80eb-788931585701"
          ],
          "pending": [],
          "skipped": [],
          "duration": 28886,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c56c7613-6d3e-48e2-b890-4466d67cd2cc",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4736,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:32811/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32811/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32811/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:32811/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:32811/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:32811/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32811/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32811/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32811/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32811/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32811/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32811/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32811/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "610c141f-1d2e-44e3-8c04-91f19b12d5c5",
              "parentUUID": "c56c7613-6d3e-48e2-b890-4466d67cd2cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4791,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:32811/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32811/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32811/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:32811/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:32811/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:32811/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32811/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32811/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32811/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32811/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32811/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32811/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32811/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8e0e40f5-43f8-4185-9776-d68c9e84d974",
              "parentUUID": "c56c7613-6d3e-48e2-b890-4466d67cd2cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4656,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:32811/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32811/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32811/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:32811/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:32811/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:32811/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32811/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32811/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32811/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32811/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32811/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32811/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32811/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1c7e88b6-5bcb-471a-a626-61f1bcd1fd79",
              "parentUUID": "c56c7613-6d3e-48e2-b890-4466d67cd2cc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "610c141f-1d2e-44e3-8c04-91f19b12d5c5",
            "8e0e40f5-43f8-4185-9776-d68c9e84d974",
            "1c7e88b6-5bcb-471a-a626-61f1bcd1fd79"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14183,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fe717b93-ee29-4d47-8a26-6ff04b537040",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 859,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:32811/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:32811/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:32811/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:32811/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:32811/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:32811/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:32811/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:32811/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32811/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32811/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:32811/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32811/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32811/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32811/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "c7e067bb-2d4d-4bfe-afe9-d7a3ef7fef8e",
              "parentUUID": "fe717b93-ee29-4d47-8a26-6ff04b537040",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 738,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:32811/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:32811/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:32811/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:32811/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:32811/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:32811/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:32811/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:32811/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32811/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32811/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:32811/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32811/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32811/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32811/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "0cf901a3-3a73-48e2-b215-713a067e0e50",
              "parentUUID": "fe717b93-ee29-4d47-8a26-6ff04b537040",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c7e067bb-2d4d-4bfe-afe9-d7a3ef7fef8e",
            "0cf901a3-3a73-48e2-b215-713a067e0e50"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1597,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}